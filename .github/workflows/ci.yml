name: CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Install Rollup native binary
      run: |
        # Explicitly install the missing rollup native dependency
        npm install @rollup/rollup-linux-x64-gnu --save-dev --no-save || true

    - name: Build
      run: npm run build

    - name: Test
      run: npm test

    - name: Test CLI
      run: |
        echo '{"test": "data"}' > test.json
        node ./dist/cli.js compress --codec=hybrid test.json -o test.juc
        node ./dist/cli.js decompress test.juc -o restored.json
        # Verify JSON content is equivalent (not byte-identical due to formatting)
        node -e "
        const fs = require('fs');
        const orig = JSON.parse(fs.readFileSync('test.json', 'utf8'));
        const restored = JSON.parse(fs.readFileSync('restored.json', 'utf8'));
        if (JSON.stringify(orig) !== JSON.stringify(restored)) {
          console.error('❌ JSON content mismatch');
          process.exit(1);
        }
        console.log('✅ CLI test passed - JSON content preserved');
        "
        rm test.json test.juc restored.json

    - name: Test Selective Decode CLI
      run: |
        # Create test NDJSON with multiple fields
        echo '{"user_id": 100, "timestamp": "2023-01-01T10:00:00Z", "event": "login", "metadata": {"ip": "192.168.1.1"}}' > test.ndjson
        echo '{"user_id": 101, "timestamp": "2023-01-01T10:01:00Z", "event": "logout", "metadata": {"ip": "192.168.1.2"}}' >> test.ndjson
        echo '{"user_id": 102, "timestamp": "2023-01-01T10:02:00Z", "event": "purchase", "amount": 99.99}' >> test.ndjson

        # Compress with columnar encoding
        node ./dist/cli.js compress-ndjson --codec=hybrid --columnar test.ndjson -o test.juc

        # Test selective decode
        node ./dist/cli.js decompress-ndjson --fields=user_id,timestamp test.juc -o projected.ndjson

        # Verify selective decode worked
        node -e "
        const fs = require('fs');
        const lines = fs.readFileSync('projected.ndjson', 'utf8').trim().split('\n');
        const firstLine = JSON.parse(lines[0]);
        if (!('user_id' in firstLine) || !('timestamp' in firstLine) || 'event' in firstLine || 'metadata' in firstLine) {
          console.error('❌ Selective decode failed - wrong fields');
          process.exit(1);
        }
        console.log('✅ Selective decode CLI test passed');
        "

        rm test.ndjson test.juc projected.ndjson

    - name: Package Size Check
      run: |
        npm pack --dry-run
        du -sh dist/

